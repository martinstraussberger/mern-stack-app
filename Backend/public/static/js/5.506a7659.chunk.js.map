{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","ErrorModal","onCancel","onClear","header","show","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortController","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","style","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Map","mapRef","center","zoom","map","window","google","maps","Marker","position","ref","i","PlaceItem","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","address","coordinates","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","PlaceList","items","length","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","userID","useParams","places","fetchPlaces","onDeletePlaces","deletePlaceID","prevPlaces"],"mappings":"qGAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OA/BZ,mC,gCCAA,6DAKaC,GALb,MAKsB,SAAAC,GACpB,OAAIA,EAAMC,KAEN,uBACEC,UAAS,yBAAoBF,EAAMG,MAAQ,UAAS,YAAIH,EAAMI,SAC5D,kBAAiB,YAAIJ,EAAMK,QAAU,kBACvCJ,KAAMD,EAAMC,MAEXD,EAAMM,UAITN,EAAMO,GAEN,kBAAC,IAAI,CACHA,GAAIP,EAAMO,GACVC,MAAOR,EAAMQ,MACbN,UAAS,yBAAoBF,EAAMG,MAAQ,UAAS,YAAIH,EAAMI,SAC5D,kBAAiB,YAAIJ,EAAMK,QAAU,mBAEtCL,EAAMM,UAKX,4BACEJ,UAAS,yBAAoBF,EAAMG,MAAQ,UAAS,YAAIH,EAAMI,SAC5D,kBAAiB,YAAIJ,EAAMK,QAAU,kBACvCI,KAAMT,EAAMS,KACZC,QAASV,EAAMU,QACfC,SAAUX,EAAMW,UAEfX,EAAMM,a,gCCrCb,sEAKaM,EAAa,SAACZ,GACzB,OACE,kBAAC,IAAK,CACJa,SAAUb,EAAMc,QAChBC,OAAO,qBACPC,OAAQhB,EAAMd,MACd+B,OAAQ,kBAAC,IAAM,CAACP,QAASV,EAAMc,SAAS,SAExC,2BAAId,EAAMd,U,yGCZhB,06MACO,IAAMgC,EAAgB,WAC3B,MAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAC9B,EAA0BF,qBAAU,mBAA7BjC,EAAK,KAAEoC,EAAQ,KAEhBC,EAAoBC,iBAAO,IAG3BC,EAAcC,sBAAW,uCAC7B,WAAOC,GAAG,6FAK4C,OAL1CC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,GACjDT,GAAa,GAGPU,EAAsB,IAAIC,gBAChCT,EAAkBU,QAAQC,KAAKH,GAAqB,kBAG3BI,MAAMR,EAAK,CAChCC,SACAC,OACAC,UACAM,OAAQL,EAAoBK,SAC3B,KAAD,EALY,OAARC,EAAQ,iBAOaA,EAASC,OAAO,KAAD,GAGxC,GAHIC,EAAY,OAClBhB,EAAkBU,QAAUV,EAAkBU,QAAQO,QACpD,SAACC,GAAO,OAAKA,IAAYV,KAEtBM,EAASK,GAAG,CAAD,sBACR,IAAIC,MAAMJ,EAAaK,SAAS,KAAD,GAEnB,OAApBvB,GAAa,GAAO,kBACbkB,GAAY,QAGC,MAHD,0BAEnBjB,EAAS,KAAIsB,SACbvB,GAAa,GAAO,+DAGvB,mDA9B4B,GA+B7B,IAgBF,OARAwB,qBAAU,WAER,OAAO,WAELtB,EAAkBU,QAAQa,SAAQ,SAACC,GAAS,OAAKA,EAAUC,cAE5D,IAEI,CACL5B,YACAlC,QACAuC,cACAwB,WAjBiB,WACjB3B,EAAS,U,gCC5Cb,0BAYe4B,IARF,SAAAlD,GACX,OACE,yBAAKE,UAAS,eAAUF,EAAME,WAAaiD,MAAOnD,EAAMmD,OACrDnD,EAAMM,Y,gCCPb,sFAOM8C,GAPN,MAOqB,SAACpD,GACpB,IAAMqD,EACJ,yBAAKnD,UAAS,gBAAWF,EAAME,WAAaiD,MAAOnD,EAAMmD,OACvD,4BAAQjD,UAAS,wBAAmBF,EAAMsD,cACxC,4BAAKtD,EAAMe,SAEb,0BACEwC,SAAUvD,EAAMuD,SAAWvD,EAAMuD,SAAW,SAACC,GAAK,OAAKA,EAAMC,mBAE7D,yBAAKvD,UAAS,yBAAoBF,EAAM0D,eAAiB1D,EAAMM,UAC/D,4BAAQJ,UAAS,wBAAmBF,EAAM2D,cAAgB3D,EAAMiB,UAItE,OAAO2C,IAASC,aAAaR,EAASS,SAASC,eAAe,iBAGnDC,EAAQ,SAAChE,GACpB,OACE,kBAAC,IAAMiE,SAAQ,KACZjE,EAAMgB,MAAQ,kBAAC,IAAQ,CAACN,QAASV,EAAMa,WACxC,kBAAC,IAAa,CACZqD,GAAIlE,EAAMgB,KACVmD,cAAY,EACZC,eAAa,EACbC,QAAS,IACTC,WAAW,SAEX,kBAAClB,EAAiBpD,O,uOC/BbuE,G,MAAM,SAACvE,GAClB,IAAMwE,EAAShD,mBACPiD,EAAiBzE,EAAjByE,OAAQC,EAAS1E,EAAT0E,KAahB,OAVA7B,qBAAU,WAER,IAAM8B,EAAM,IAAIC,OAAOC,OAAOC,KAAKP,IAAIC,EAAOvC,QAAS,CACrDyC,KAAM1E,EAAM0E,KACZD,OAAQzE,EAAMyE,SAGhB,IAAIG,OAAOC,OAAOC,KAAKC,OAAO,CAAEC,SAAUhF,EAAMyE,OAAQE,IAAKA,MAC5D,CAACF,EAAQC,IAGV,yBAAKO,IAAKT,EAAQtE,UAAS,cAASF,EAAME,WAAaiD,MAAOnD,EAAMmD,U,qDCnBxE,kmGAAA+B,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAUO,IAAMC,EAAY,SAACnF,GACxB,MAAsDkB,cAA9CE,EAAS,EAATA,UAAWlC,EAAK,EAALA,MAAOuC,EAAW,EAAXA,YAAawB,EAAU,EAAVA,WACjCmC,EAAOC,qBAAWC,KACxB,EAA8BnE,oBAAS,GAAM,mBAAtCoE,EAAO,KAAEC,EAAU,KAC1B,EAAgDrE,oBAAS,GAAM,mBAAxDsE,EAAgB,KAAEC,EAAmB,KAItCC,EAAkB,WAAH,OAASH,GAAW,IAMnCI,EAAsB,WAC1BF,GAAoB,IAGhBG,EAAoB,uCAAG,8EACA,OAA3BH,GAAoB,GAAO,kBAEnBjE,EACJqE,oCAAiC,kBAAc9F,EAAM+F,IACrD,SACA,KACA,CACEC,cAAe,UAAYZ,EAAKa,QAElC,KAAD,EACDjG,EAAMkG,SAASlG,EAAM+F,IAAI,uGAE5B,kBAbyB,mCAe1B,OACE,kBAAC,IAAM9B,SAAQ,KACb,kBAACrD,EAAA,EAAU,CAAC1B,MAAOA,EAAO4B,QAASmC,IACnC,kBAACe,EAAA,EAAK,CACJhD,KAAMuE,EACN1E,SAAU8E,EACV5E,OAAQf,EAAMmG,QACdzC,aAAa,4BACbC,YAAY,4BACZ1C,OAAQ,kBAAClB,EAAA,EAAM,CAACW,QAASiF,GAAiB,UAE1C,yBAAKzF,UAAU,iBACb,kBAAC,EAAG,CAACuE,OAAQzE,EAAMoG,YAAa1B,KAAM,OAG1C,kBAACV,EAAA,EAAK,CACJhD,KAAMyE,EACN5E,SAAU+E,EACV7E,OAAO,gBACP4C,YAAY,4BACZ1C,OACE,kBAAC,IAAMgD,SAAQ,KACb,kBAAClE,EAAA,EAAM,CAACK,SAAO,EAACM,QAASkF,GAAqB,UAG9C,kBAAC7F,EAAA,EAAM,CAACM,QAAM,EAACK,QAASmF,GAAsB,YAMlD,2BAAG,kGAKL,wBAAI3F,UAAU,cACZ,kBAACgD,EAAA,EAAI,CAAChD,UAAU,uBACbkB,GAAa,kBAACiF,EAAA,EAAc,CAACC,WAAS,IACvC,yBAAKpG,UAAU,qBACb,yBACEqG,IAAG,UAAKT,gCAA+B,YAAI9F,EAAMwG,OACjDC,IAAKzG,EAAM0G,SAGf,yBAAKxG,UAAU,oBACb,4BAAKF,EAAM0G,OACX,4BAAK1G,EAAMmG,SACX,2BAAInG,EAAM2G,cAEZ,yBAAKzG,UAAU,uBACb,kBAACH,EAAA,EAAM,CAACK,SAAO,EAACM,QA9EH,WAAH,OAAS8E,GAAW,KA8EW,eAGxCJ,EAAKwB,SAAW5G,EAAM6G,WACrB,kBAAC9G,EAAA,EAAM,CAACQ,GAAE,kBAAaP,EAAM+F,KAAM,QAGpCX,EAAKwB,SAAW5G,EAAM6G,WACrB,kBAAC9G,EAAA,EAAM,CAACM,QAAM,EAACK,QAlFM,WAC/BgF,GAAoB,KAiFwC,eChGnDoB,G,MAAY,SAAC9G,GACxB,OAA2B,IAAvBA,EAAM+G,MAAMC,OAEZ,yBAAK9G,UAAU,qBACb,kBAACgD,EAAA,EAAI,KACH,4BAAI,sCACJ,kBAACnD,EAAA,EAAM,CAACQ,GAAG,cAAcE,KAAK,IAAI,iBAMxC,wBAAIP,UAAU,cACXF,EAAM+G,MAAMpC,KAAI,SAACsC,GAAK,OACrB,kBAAC,EAAS,CACRnI,IAAKmI,EAAMlB,GACXA,GAAIkB,EAAMlB,GACVS,MAAOS,EAAMT,MACbE,MAAOO,EAAMP,MACbC,YAAaM,EAAMN,YACnBR,QAASc,EAAMd,QACfU,UAAWI,EAAMC,QACjBd,YAAaa,EAAME,SACnBjB,SAAUlG,EAAMoH,sB,aC7B1B,kmGAAAlC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQA6CemC,UAvCI,WACjB,MAAwClG,qBAAU,mBAA3CmG,EAAY,KAAEC,EAAe,KACpC,EAAsDrG,cAA9CE,EAAS,EAATA,UAAWlC,EAAK,EAALA,MAAOuC,EAAW,EAAXA,YAAawB,EAAU,EAAVA,WAEjCuE,EAASC,cAAYD,OAE3B3E,qBAAU,YACS,uCAAG,6GAEWpB,EAAY,GAAD,OACjCqE,oCAAiC,wBAAgB0B,IACpD,KAAD,EAFKjF,EAAY,OAGlBgF,EAAgBhF,EAAamF,QAAQ,uGAExC,kBAPgB,mCAQjBC,KACC,CAAClG,EAAa+F,IAQjB,OACE,kBAAC,IAAMvD,SAAQ,KACb,kBAACrD,EAAA,EAAU,CAAC1B,MAAOA,EAAO4B,QAASmC,IAClC7B,GACC,yBAAKlB,UAAU,UACb,kBAACmG,EAAA,EAAc,QAGjBjF,GAAakG,GACb,kBAAC,EAAS,CAACP,MAAOO,EAAcM,eAfV,SAACC,GAC3BN,GAAgB,SAACO,GAAU,OACzBA,EAAWtF,QAAO,SAACyE,GAAK,OAAKA,EAAMlB,KAAO8B","file":"static/js/5.506a7659.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nexport const Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};","import React from 'react';\r\n\r\nimport { Modal } from './Modal';\r\nimport { Button } from '../FormElements/Button';\r\n\r\nexport const ErrorModal = (props) => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header='An Error Occurred!'\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequest = useRef([]);\r\n\r\n  // useCallback to avoid infinite loops\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      // not using state since we won't update the UI if data has changed\r\n      // AbortController functionality from modern browsers -> in case ui is different if path has changed\r\n      const httpAbortController = new AbortController();\r\n      activeHttpRequest.current.push(httpAbortController);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortController.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n        activeHttpRequest.current = activeHttpRequest.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortController\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // since useEffect can also be used not to update the dependency array but to clear side effects\r\n  useEffect(() => {\r\n    // return function is returned as a clean-up Function\r\n    return () => {\r\n      // array of AbortControllers\r\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n    clearError,\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport { Backdrop } from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : (event) => event.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>{props.children}</div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>{props.footer}</footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nexport const Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nexport const Map = (props) => {\r\n  const mapRef = useRef();\r\n  const { center, zoom } = props;\r\n\r\n  // will run in the first render cycle but after the react jsx code (html, js)\r\n  useEffect(() => {\r\n    // .current holds the actual pointer\r\n    const map = new window.google.maps.Map(mapRef.current, {\r\n      zoom: props.zoom,\r\n      center: props.center,\r\n    });\r\n\r\n    new window.google.maps.Marker({ position: props.center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport { Button } from \"../../shared/components/FormElements/Button\";\r\nimport { Modal } from \"../../shared/components/UIElements/Modal\";\r\nimport { Map } from \"../../shared/components/UIElements/Map\";\r\nimport { ErrorModal } from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport \"./PlaceItem.css\";\r\nimport { LoadingSpinner } from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nexport const PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass='place-item__modal-content'\r\n        footerClass='place-item__modal-actions'\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className='map-container'>\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header='Are you sure?'\r\n        footerClass='place-item__modal-actions'\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it can't be\r\n          undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className='place-item'>\r\n        <Card className='place-item__content'>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className='place-item__image'>\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className='place-item__info'>\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className='place-item__actions'>\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { PlaceItem } from './PlaceItem';\r\nimport { Button } from '../../shared/components/FormElements/Button';\r\n\r\nimport './PlaceList.css';\r\n\r\nexport const PlaceList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className='place-list center'>\r\n        <Card>\r\n          <h2>No Places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\" type=\"\" >Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className='place-list'>\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PlaceList } from \"../components/PlaceList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { ErrorModal } from \"../../shared/components/UIElements/ErrorModal\";\r\nimport { LoadingSpinner } from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userID = useParams().userID;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userID}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userID]);\r\n\r\n  const placeDeletedHandler = (deletePlaceID) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletePlaceID)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlaces={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}