{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","AuthUser","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.03059c7d.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nexport const LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nexport const Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className='backdrop' onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};","import React from \"react\";\r\n\r\nimport './MainHeader.css'\r\n\r\nexport const MainHeader = props => {\r\n    return <header className=\"main-header\">\r\n        {props.children}\r\n    </header>\r\n}","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css';\r\n\r\nexport const NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className='nav-links'>\r\n      <li>\r\n        <NavLink to='/' exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/places/new'>ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/auth'>AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && <li>\r\n        <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>}\r\n    </ul>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nexport const SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames='slide-in-left'\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className='side-drawer' onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaPlaceOfWorship } from 'react-icons/fa';\r\nimport { MainHeader } from './MainHeader';\r\nimport { NavLinks } from './NavLinks';\r\nimport { SideDrawer } from './SideDrawer';\r\nimport { Backdrop } from '../UIElements/Backdrop';\r\n\r\nimport './MainNavigation.css';\r\n\r\nexport const MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className='main-navigation__drawer-nav'>\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n      <MainHeader>\r\n        <button className='main-navigation__menu-btn' onClick={openDrawerHandler}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n\r\n        <h1 className='main-navigation__title'>\r\n          <Link to='/'>\r\n            <FaPlaceOfWorship />\r\n          </Link>\r\n        </h1>\r\n\r\n        <nav className='main-navigation__header-nav'>\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </>\r\n  );\r\n};\r\n","import React, { Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\n// import { Users } from './user/pages/Users';\r\n// import { NewPlace } from './places/pages/NewPlace';\r\n// import { UserPlaces } from './places/pages/UserPlaces';\r\n// import { UpdatePlace } from \"./places/pages/UpdatePlace\";\r\n// import { AuthUser } from \"./user/pages/AuthUser\";\r\nimport { MainNavigation } from \"./shared/components/Navigation/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport { LoadingSpinner } from \"./shared/components/UIElements/LoadingSpinner\";\r\n\r\nimport \"./root-variables.css\";\r\n\r\n// code splitting for lazy loading\r\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\r\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\r\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\r\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\r\nconst AuthUser = React.lazy(() => import(\"./user/pages/AuthUser\"));\r\n\r\nconst App = () => {\r\n  const { login, logout, token, userId } = useAuth();\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path='/:userID/places' exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path='/places/new' exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path='/places/:placeID'>\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Redirect to='/' />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path='/' exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path='/:userID/places' exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path='/auth'>\r\n          <AuthUser />\r\n        </Route>\r\n        <Redirect to='/auth' />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token: token,\r\n        userId: userId,\r\n        login: login,\r\n        logout: logout,\r\n      }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense\r\n            fallback={\r\n              <div className='center'>\r\n                <LoadingSpinner />\r\n              </div>\r\n            }\r\n          >\r\n            {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}